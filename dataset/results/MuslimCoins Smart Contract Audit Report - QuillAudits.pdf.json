{
    "path": "artifacts/MuslimCoins Smart Contract Audit Report - QuillAudits.pdf",
    "project_info": {
        "url": "n/a",
        "commit_id": "n/a",
        "address": "0x8B93585978B81E4FC0aE063fe526dBfBE9B8D42D",
        "chain": "bsc",
        "compiler_version": [
            "v0.6.12+commit.27d51765"
        ],
        "project_path": {
            "MuslimCoins": "contracts/MuslimCoins Smart Contract Audit Report - QuillAudits/MuslimCoins"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-20"
                ]
            },
            "title": "Missing zero address validation",
            "description": "Missing zero address validation in _transferBothExcluded(), _approve(), _transfer(), and _tokenTransfer() functions.",
            "severity": "medium",
            "location": "Contract - MuslimCoins, functions - _transferBothExcluded(), _approve(), _transfer(), and _tokenTransfer()"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1059"
                ]
            },
            "title": "Missing comments and description",
            "description": "Comments and descriptions are missing for methods and variables.",
            "severity": "info",
            "location": "Contract - MuslimCoins, methods and variables"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-670"
                ]
            },
            "title": "Same execution for two different cases can be merged",
            "description": "Same execution for two different cases can be merged in _transferFromExcluded(), _transferToExcluded(), and other functions.",
            "severity": "medium",
            "location": "Contract - MuslimCoins, functions - _transferFromExcluded(), _transferToExcluded()"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1076"
                ],
                "3": [
                    "CWE-1078"
                ]
            },
            "title": "Less meaningful variable",
            "description": "Variable names do not provide a clear picture of their purpose (e.g., MAX_INT_256).",
            "severity": "info",
            "location": "Contract - MuslimCoins, variables"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Variable defined but never used",
            "description": "Variables are defined but never used.",
            "severity": "info",
            "location": "Contract - MuslimCoins, variables"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1068"
                ]
            },
            "title": "Public methods only being used externally",
            "description": "Public methods (e.g., name(), symbol()) should be declared as external to save gas.",
            "severity": "medium",
            "location": "Contract - MuslimCoins, public methods"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Constant calculations in the contract",
            "description": "Precalculated initialization can save 2847 units of gas in deployment.",
            "severity": "medium",
            "location": "Contract - MuslimCoins, constants"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Use a constructor to set addresses",
            "description": "Addresses should be provided dynamically via the constructor for readability and correctness.",
            "severity": "medium",
            "location": "Contract - MuslimCoins, constructor"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Getters should be at the bottom of the contract",
            "description": "Getters should be placed at the bottom of the contract for readability.",
            "severity": "info",
            "location": "Contract - MuslimCoins, getters"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Length calculation within the loop",
            "description": "Avoid length calculations within loops.",
            "severity": "medium",
            "location": "Contract - MuslimCoins, loops"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1068"
                ]
            },
            "title": "Inconsistent error messages",
            "description": "Error messages should be consistent across different cases.",
            "severity": "medium",
            "location": "Contract - MuslimCoins, error handling"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Naming Conventions",
            "description": "Private method names (e.g., \"removeAllFee\", \"restoreAllFee\") do not follow the naming convention.",
            "severity": "info",
            "location": "Contract - MuslimCoins, private methods"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1068"
                ]
            },
            "title": "Presence of not implemented payable method",
            "description": "The `receive()` method is not implemented but present in the contract.",
            "severity": "medium",
            "location": "Contract - MuslimCoins, `receive()` method"
        }
    ]
}