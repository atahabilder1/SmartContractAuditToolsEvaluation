{
    "path": "artifacts/Nativ3Network_final_Secure3_Audit_Report.pdf",
    "project_info": {
        "url": "https://github.com/Nativ3DAO/contracts-for-audit",
        "commit_id": "3e1f3cce90a8356aa6a80360dbb72255ee4596a5",
        "address": "n/a",
        "chain": "n/a",
        "compiler_version": [
            "n/a"
        ],
        "project_path": {
            "contracts-for-audit": "contracts/Nativ3Network_final_Secure3_Audit_Report/contracts-for-audit"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-284"
                ]
            },
            "title": "onlyAllowed is not rigorous in its judgment",
            "description": "The onlyAllowed function can be bypassed when used with AA wallets (ERC4337 Account Abstraction)",
            "severity": "medium",
            "location": "contracts/bridge/Inbox.sol#L58-L62"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-400"
                ],
                "3": [
                    "CWE-770"
                ]
            },
            "title": "DOS can occur when claiming refund for Smart Contract addresses",
            "description": "Users can lose tokens when overpaying for ticket creation due to no mechanism for refunding excess payments.",
            "severity": "medium",
            "location": "Inbox.sol, createRetryableTicket function"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "SequencerInbox::MaxTimeVariation lacks the validations to prevent truncation issues",
            "description": "Truncation issues due to typecasting uint256 to uint64",
            "severity": "low",
            "location": "code/contracts/bridge/SequencerInbox.sol#L73-L82, L415-L421"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1068"
                ]
            },
            "title": "PriceFeed address not updated",
            "description": "Hardcoded PriceFeed address in scaleBaseFeeL1 function is for Arbitrum Goerli test chain, not mainnet",
            "severity": "low",
            "location": "code/contracts/bridge/Bridge.sol#L308"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Invalid estimation for the RetryableSubmissionFee",
            "description": "Hardcoded components in calculateRetryableSubmissionFee function may become unreasonable with adoption",
            "severity": "low",
            "location": "code/contracts/bridge/Inbox.sol#L129-L135"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Block production may not be constant",
            "description": "block.number is unreliable for short-term timing information on Arbitrum",
            "severity": "low",
            "location": "code/contracts/bridge/SequencerInbox.sol#L84-L95, L128"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-284"
                ]
            },
            "title": "BatchSpendingReport can be generated by anyone using delayed message queue",
            "description": "enqueueDelayedMessage function allows any user to generate BatchSpendingReport",
            "severity": "low",
            "location": "code/contracts/bridge/Bridge.sol#L125-L138, L141-L156"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-755"
                ]
            },
            "title": "Cross-chain calls will not be executed as expected when msg.value is greater than 0",
            "description": "executeBridgeCall function behaves differently when msg.value > 0",
            "severity": "low",
            "location": "code/contracts/bridge/Outbox.sol#L237-L261"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-670"
                ]
            },
            "title": "Unable to calling Bridge.executeCall() with attached ETH",
            "description": "Function calls with msg.value > 0 will not be executed as expected due to minting GasToken instead of making a low-level call.",
            "severity": "low",
            "location": "Outbox.sol, executeBridgeCall function"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Return value for message added to Delay accumulator is stale",
            "description": "The return value should be based on the updated delayedInboxAccs array length instead of the old count variable.",
            "severity": "low",
            "location": "Bridge.sol, addMessageToDelayedAccumulator function"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-20"
                ]
            },
            "title": "Missing zero address check",
            "description": "No checks are made to ensure that addresses passed as parameters are not zero addresses.",
            "severity": "low",
            "location": "Inbox.sol, setAllowList function; Bridge.sol, initialize function"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-284"
                ]
            },
            "title": "Centralized authority risk in GasToken::mint() and burn functions",
            "description": "The mint and burn functions can be called by a single entity (the Bridge or Inbox), posing a centralized authority risk.",
            "severity": "low",
            "location": "GasToken.sol, mint and burn functions"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Redundant Code",
            "description": "Redundant code is found in various contracts, which can be removed for optimization and clarity.",
            "severity": "info",
            "location": "Inbox.sol, SequencerInbox.sol, Bridge.sol"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-755"
                ],
                "3": [
                    "CWE-390"
                ]
            },
            "title": "Meaningless implementation in `depositEth` function",
            "description": "The `depositEth` function reverts with an \"Error : Abandon\" message without performing any meaningful action.",
            "severity": "info",
            "location": "Inbox contract, depositEth function"
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-666"
                ],
                "3": [
                    "CWE-672"
                ]
            },
            "title": "Deprecated functions not removed",
            "description": "The `addSequencerL2BatchFromOrigin` and `acceptFundsFromOldBridge` functions are deprecated but not removed.",
            "severity": "info",
            "location": "Multiple contracts (ISeq-uencerInbox, SequencerInbox)"
        },
        {
            "id": 15,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Unused variable in `executeCall2` function",
            "description": "The `returnData` variable is not utilized by the `executeCall2` function.",
            "severity": "info",
            "location": "Not specified"
        },
        {
            "id": 16,
            "category": {
                "1": [
                    "CWE-697"
                ],
                "2": [
                    "CWE-1025"
                ]
            },
            "title": "Wrong default value comparison in `l2ToL1Block` function",
            "description": "The `l2Block` from context is compared against `L1BLOCK_DEFAULT_CONTEXT` instead of `L2BLOCK_DEFAULT_CONTEXT`.",
            "severity": "info",
            "location": "Outbox contract, l2ToL1Block function"
        },
        {
            "id": 17,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1059"
                ],
                "3": [
                    "CWE-1111"
                ]
            },
            "title": "Events not clearly expressing underlying changes in SequencerInbox contract",
            "description": "The events emitted by owner functions do not clearly express the underlying changes.",
            "severity": "info",
            "location": "SequencerInbox contract, multiple functions (setIsBatchPoster, setMaxTimeVariation, etc.)"
        }
    ]
}