{
    "path": "artifacts/Digihealth Smart Contract Audit Report - QuillAudits.pdf",
    "project_info": {
        "url": "n/a",
        "commit_id": "n/a",
        "address": "0xA87584Cfeb892C33A1C9a233e4A733b45c4160E6",
        "chain": "bsc",
        "compiler_version": [
            "v0.8.10+commit.fc410830"
        ],
        "project_path": {
            "DIGIHEALTH": "contracts/Digihealth Smart Contract Audit Report - QuillAudits/DIGIHEALTH"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-664"
                ]
            },
            "title": "Ownership Transfer must be a Two-step Process",
            "description": "Contracts are integrated with the standard Openzeppelin ownable contract, but when the owner mistakenly transfers ownership to an incorrect address, ownership is completely removed from the original owner and cannot be reverted.",
            "severity": "medium",
            "location": "Ownable contract"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Unlocked pragma",
            "description": "Contracts should be deployed with the same compiler version and flags that they have been tested with thoroughly. Locking the pragma helps to ensure that contracts do not accidentally get deployed using an outdated compiler version.",
            "severity": "info",
            "location": "Pragma solidity^0.8.10"
        }
    ]
}