{
    "path": "artifacts/QuillAudit-Rocket_Global_Smart_Contract_Audit_Report.pdf",
    "project_info": {
        "url": "n/a",
        "commit_id": "n/a",
        "address": "0xba07134eda453bbefa4c538c81441574fe65db63",
        "chain": "bsc",
        "compiler_version": [
            "v0.8.6+commit.11564f7e"
        ],
        "project_path": {
            "RocketVest1": "contracts/QuillAudit-Rocket_Global_Smart_Contract_Audit_Report/RocketVest1"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1357"
                ],
                "3": [
                    "CWE-1104"
                ]
            },
            "title": "Mismatch and outdated compiler version",
            "description": "Using an outdated and mismatched compiler version can be problematic, especially if publicly disclosed bugs and issues affect the current compiler version.",
            "severity": "low",
            "location": "RocketVest1 contract and CoinToken contract"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "SWC 103: Floating Pragma",
            "description": "Contracts should be deployed with the same compiler version and flags that they have been tested with thoroughly.",
            "severity": "low",
            "location": "Both RocketVest1 and CoinToken contracts"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-693"
                ],
                "2": [
                    "CWE-358"
                ]
            },
            "title": "Using the approve function of the token standard",
            "description": "The approve function of ERC-20 is vulnerable to front-running attacks.",
            "severity": "low",
            "location": "RocketVest1 contract and CoinToken contract"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-693"
                ],
                "2": [
                    "CWE-330"
                ]
            },
            "title": "Potential use of \"block.timestamp\" as a source of randomness",
            "description": "Contracts often need access to time values, but using block.timestamp can be safe due to decentralization and potential miner manipulation.",
            "severity": "low",
            "location": "RocketVest1.sol"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "Integer Overflow and Underflow (SWC 101)",
            "description": "An overflow/underflow happens when an arithmetic operation reaches the maximum or minimum size of a type.",
            "severity": "low",
            "location": "RocketVest1.sol"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Use Require statement for multiple checks in transfer event",
            "description": "Changing the visibility level to external increases code readability and reduces gas consumption.",
            "severity": "low",
            "location": "CoinToken.sol"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Open Zeppelin standards (Informational)",
            "description": "Follow Open Zeppelin standard for token contract making as best practice.",
            "severity": "info",
            "location": "Token contracts"
        }
    ]
}