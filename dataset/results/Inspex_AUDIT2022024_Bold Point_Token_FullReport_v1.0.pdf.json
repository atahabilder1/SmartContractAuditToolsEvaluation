{
    "path": "artifacts/Inspex_AUDIT2022024_Bold Point_Token_FullReport_v1.0.pdf",
    "project_info": {
        "url": "https://github.com/YAY-Games/bpt-token-contract",
        "commit_id": "fdad0b795752f6c947a774e867972c507f0e6ac7",
        "address": "n/a",
        "chain": "n/a",
        "compiler_version": [
            "n/a"
        ],
        "project_path": {
            "bpt-token-contract": "contracts/Inspex_AUDIT2022024_Bold Point_Token_FullReport_v1/bpt-token-contract"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ]
            },
            "title": "Untransferable Tokens via Contract Pausing",
            "description": "The owner can control the token transfer flows, resulting in unfairness for the users.",
            "severity": "low",
            "location": "BoldPointToken contract, function pause()"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-477"
                ]
            },
            "title": "Outdated Compiler Version",
            "description": "The Solidity compiler versions specified in the smart contracts were outdated, which may potentially cause damage to the smart contracts or users.",
            "severity": "low",
            "location": "BoldPointToken.sol (pragma solidity 0.8.10;)"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Improper Function Visibility",
            "description": "Functions with public visibility copy calldata to memory when being executed, which uses more resources (gas) than reading directly from calldata.",
            "severity": "info",
            "location": "BoldPointToken.sol (functions pause() and unpause())"
        }
    ]
}