{
    "path": "artifacts/Solidified-NIFTEX__[04.03.2021].pdf",
    "project_info": {
        "url": "https://github.com/metalithio/niftex-v2-contracts",
        "commit_id": "76d1407ff5a6dc0d2593dc76dcd33208a9b82b2a",
        "address": "n/a",
        "chain": "n/a",
        "compiler_version": [
            "n/a"
        ],
        "project_path": {
            "niftex-v2-contracts": "contracts/Solidified-NIFTEX__[04/niftex-v2-contracts"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-705"
                ]
            },
            "title": "External calls before state change in closeBuyout()",
            "description": "Deleting internal data-structures after sending out ETH value might cause unexpected side effects.",
            "severity": "low",
            "location": "BuyoutModule.sol, function closeBuyout()"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Missing zero checks in mintWallet()",
            "description": "No pre-condition checks to ensure essential parameters are not address(0).",
            "severity": "low",
            "location": "ShardedWalletFactory.sol, function mintWallet()"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-862"
                ],
                "4": [
                    "CWE-20"
                ]
            },
            "title": "Bonding curve potentially vulnerable to flashloans",
            "description": "The bonding curve can be griefable via flash loans if used with incorrect parameters.",
            "severity": "low",
            "location": "BondingCurve3.sol"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Tautologies in pre-condition checks supplyShards() and supplyEther()",
            "description": "Redundant checks in pre-conditions that can be removed for code readability.",
            "severity": "n/a",
            "location": "BondingCurve.sol, functions supplyShards() and supplyEther()"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-252"
                ]
            },
            "title": "Ignored return value of external call in moduleExecute()",
            "description": "The return value of Address.functionCallWithValue() is ignored.",
            "severity": "n/a",
            "location": "ShardeWallet.sol, function moduleExecute()"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Unused modifier",
            "description": "The modifier onlyAuthorize() is never used.",
            "severity": "n/a",
            "location": "ModuleBase.sol"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Consider declaring functions schedule() & execute() as external instead of public",
            "description": "Declaring functions as external can save gas by reading array arguments directly from calldata.",
            "severity": "n/a",
            "location": "ActionModule.sol, functions schedule() and execute()"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-755"
                ],
                "3": [
                    "CWE-390"
                ]
            },
            "title": "Consider providing require error messages",
            "description": "Providing require error messages can improve smart contract user experience when a transaction reverts.",
            "severity": "n/a",
            "location": "Global recommendation for all contracts"
        }
    ]
}