{
    "path": "artifacts/PeckShield-Audit-Report-StackerVC-v1.0.pdf",
    "project_info": {
        "url": "https://github.com/jack0x-tech/StackerVC_VentureFund001/tree/2c9d64b",
        "commit_id": "2c9d64b",
        "address": "n/a",
        "chain": "n/a",
        "compiler_version": [
            "n/a"
        ],
        "project_path": {
            "StackerVC_VentureFund001": "contracts/PeckShield-Audit-Report-StackerVC-v1/StackerVC_VentureFund001"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1068"
                ]
            },
            "title": "Safe-Version Replacement of safeTransfer()/safeTransferFrom()",
            "description": "Incompatibility with ERC-20 specification, potential issues if not handled properly",
            "severity": "medium",
            "location": "Stacker.VC contract, functions: safeTransfer() and safeTransferFrom()"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-1265"
                ]
            },
            "title": "Suggested Adherence to Checks-Effects-Interactions",
            "description": "Violation of checks-effects-interactions principle, potential re-entrancy attack vector",
            "severity": "low",
            "location": "GaugeD1, LPGuarge, deposit() function"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-707"
                ],
                "2": [
                    "CWE-20"
                ],
                "3": [
                    "CWE-1287"
                ]
            },
            "title": "Incompatibility with Deflationary/Rebasing Tokens",
            "description": "GaugeD1 contract is not compatible with deflationary/rebasing tokens.",
            "severity": "info",
            "location": "GaugeD1 contract, deposit() function"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Non-Functional setEndBlock()/deposit() in LPGauge",
            "description": "Hardcoded startBlock causes setEndBlock() and deposit() to fail.",
            "severity": "medium",
            "location": "LPGauge contract, functions: setEndBlock() and deposit()"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-435"
                ]
            },
            "title": "Asset Consistency in VaultGaugeBridge::newBridge()",
            "description": "Lack of asset consistency check between vault and gauge.",
            "severity": "low",
            "location": "VaultGaugeBridge contract, function: newBridge()"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Improved Precision By Multiplication And Division Reordering",
            "description": "Potential precision loss due to multiplication and division ordering.",
            "severity": "low",
            "location": "Multiple Contracts, arithmetic operations"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1068"
                ]
            },
            "title": "Inconsistency Between Document and Implementation",
            "description": "Misleading comment in VCTreasuryV1::startFund().",
            "severity": "info",
            "location": "VCTreasuryV1 contract, startFund() function"
        }
    ]
}