{
    "path": "artifacts/aiwallet.pdf",
    "project_info": {
        "url": "n/a",
        "commit_id": "3e08fca346948c22441dfa8c8443b3da9cfa45d82425bb71d18ea4eca643a4c0",
        "address": "0x309d43cb7bb1e07371eee4947103aa019121a973",
        "chain": "bsc",
        "compiler_version": [
            "v0.8.17+commit.8df45f5f"
        ],
        "project_path": {
            "AiWallet": "contracts/aiwallet/AiWallet"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-755"
                ]
            },
            "title": "PTRP - Potential Transfer Revert Propagation",
            "description": "The contract sends funds to a marketingWallet, which can either be a wallet address or a contract. If the address belongs to a contract, it may revert from incoming payment.",
            "severity": "low",
            "location": "AiWallet.sol#L753"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "L04 - Conformance to Solidity Naming Conventions",
            "description": "The contract does not follow the Solidity style guide for naming conventions, which can affect readability and maintainability.",
            "severity": "low",
            "location": "AiWallet.sol#L33,34,51,71,642,650,658,665,722"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "L09 - Dead Code Elimination",
            "description": "The contract contains dead code that is never executed or reached during normal contract execution.",
            "severity": "low",
            "location": "AiWallet.sol#L227,238,242,250,258,269,273,282,286,295,313,325,499"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-190"
                ]
            },
            "title": "L14 - Uninitialized Variables in Local Scope",
            "description": "Using an uninitialized local variable can lead to unpredictable behavior and potentially cause errors in the contract.",
            "severity": "low",
            "location": "AiWallet.sol#L574"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-705"
                ]
            },
            "title": "L15 - Local Scope Variable Shadowing",
            "description": "Local scope variable shadowing occurs when a local variable with the same name as a variable in an outer scope is declared within a function or code block.",
            "severity": "low",
            "location": "AiWallet.sol#L572"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1177"
                ],
                "3": [
                    "CWE-676"
                ]
            },
            "title": "L17 - Usage of Solidity Assembly",
            "description": "Using assembly can be useful for optimizing code, but it can also be error-prone and lead to syntax, type, out-of-bounds, stack, and revert errors.",
            "severity": "low",
            "location": "AiWallet.sol#L330"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-252"
                ]
            },
            "title": "L20 - Succeeded Transfer Check",
            "description": "The contract does not check if the result of the transfer methods is successful, which can lead to incorrect assumptions about the transfer.",
            "severity": "low",
            "location": "AiWallet.sol#L626"
        }
    ]
}