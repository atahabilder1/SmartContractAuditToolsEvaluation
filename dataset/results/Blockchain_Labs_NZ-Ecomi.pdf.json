{
    "path": "artifacts/Blockchain_Labs_NZ-Ecomi.pdf",
    "project_info": {
        "url": "https://github.com/Ecomi-Ecosystem/tge-contract",
        "commit_id": "81daf727bc584e3dce733e85dce29982e5dddb8c",
        "address": "n/a",
        "chain": "n/a",
        "compiler_version": [
            "n/a"
        ],
        "project_path": {
            "tge-contract": "contracts/Blockchain_Labs_NZ-Ecomi/tge-contract"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Contract defining variables are not defined by default best practices",
            "description": "No check that tokenAllowance, allowanceProvider, crowdsale are valid.",
            "severity": "low",
            "location": "OMICrowdsale.sol"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Old Solidity version best practices",
            "description": "The current Solidity release version is 0.4.24, but the project is using 0.4.18.",
            "severity": "low",
            "location": "OMICrowdsale.sol"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1068"
                ]
            },
            "title": "Zeppelin Solidity framework was renamed testability",
            "description": "Repository \"zeppelin-solidity\" was renamed to the \"openzeppelin-solidity\" in May, 2018.",
            "severity": "low",
            "location": "OMICrowdsale.sol"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "require() vs. modifiers best practices",
            "description": "Different approaches used for require() and modifiers in the same contract.",
            "severity": "low",
            "location": "OMICrowdsale.sol"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Solidity variables should be used instead of hardcoded numbers best practice",
            "description": "Using hardcoded number (86400) instead of a Solidity variable.",
            "severity": "low",
            "location": "OMITokenLock.sol"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-755"
                ]
            },
            "title": "Multiple reverting correctness",
            "description": "If require(_release(_beneficiary)) fails, releaseAll() function will also fail.",
            "severity": "medium",
            "location": "OMICrowdsale.sol"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-284"
                ]
            },
            "title": "Any address could be used as Crowdsale or AllowanceProvider addresses correctness",
            "description": "Anyone can set the crowdsaleAddress using setCrowdsaleAddress() function.",
            "severity": "medium",
            "location": "OMICrowdsale.sol"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-862"
                ]
            },
            "title": "Finalization crowdsale could be incomplete correctness",
            "description": "The Crowdsale _finalization() is an internal function and could be called only in specific scenarios.",
            "severity": "medium",
            "location": "OMICrowdsale.sol"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Variables assigned when it's possible to avoid them and thus save the gas",
            "description": "Removing variables that are used only once can optimize gas usage.",
            "severity": "medium",
            "location": "OMICrowdsale.sol"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-697"
                ],
                "2": [
                    "CWE-1025"
                ],
                "3": [
                    "CWE-20"
                ]
            },
            "title": "Token transfer to the wrong account correctness",
            "description": "The transferFrom() function sends tokens to the msg.sender, which is incorrect in certain scenarios.",
            "severity": "critical",
            "location": "OMIToken.sol"
        }
    ]
}