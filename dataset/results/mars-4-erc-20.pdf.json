{
    "path": "artifacts/mars-4-erc-20.pdf",
    "project_info": {
        "url": "https://github.com/mars4code/erc20/tree/08a5ce28a4af5235f08a28cb17552ed812ed8368",
        "commit_id": "08a5ce28a4af5235f08a28cb17552ed812ed8368",
        "address": "n/a",
        "chain": "n/a",
        "compiler_version": [
            "n/a"
        ],
        "project_path": {
            "erc20": "contracts/mars-4-erc-20/erc20"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1076"
                ]
            },
            "title": "Unlocked Pragma",
            "description": "Every Solidity file specifies in the header a version number of the format pragma solidity (^)0.4.*, which implies an unlocked pragma.",
            "severity": "low",
            "location": "Mars4ERC20.sol"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Clone-and-Own",
            "description": "The clone-and-own approach involves copying and adjusting open source code at one's own discretion, which may contain security vulnerabilities.",
            "severity": "low",
            "location": "Mars4ERC20.sol"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-435"
                ]
            },
            "title": "Race Conditions / Front-Running",
            "description": "A block is an ordered collection of transactions from all around the network, making it possible for the ordering of these transactions to manipulate the end result.",
            "severity": "low",
            "location": "Mars4ERC20.sol"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-664"
                ]
            },
            "title": "Greedy Contract",
            "description": "A greedy contract is a contract that can receive ether which can never be redeemed.",
            "severity": "low",
            "location": "Mars4ERC20.sol"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-862"
                ]
            },
            "title": "Allowance Double-Spend Exploit",
            "description": "The contract is vulnerable to the allowance double-spend exploit, allowing Bob to transfer Alice's tokens twice.",
            "severity": "low",
            "location": "n/a"
        }
    ]
}