{
    "path": "artifacts/Solidified-Aztec_Lido_Bridge.pdf",
    "project_info": {
        "url": "https://github.com/aztecProtocol/aztec-connect-bridges/",
        "commit_id": "d5aca13d4d0a17b21eeddf77f49f4c6613461fb0",
        "address": "n/a",
        "chain": "n/a",
        "compiler_version": [
            "n/a"
        ],
        "project_path": {
            "aztec-connect-bridges": "contracts/Solidified-Aztec_Lido_Bridge/aztec-connect-bridges"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-252"
                ]
            },
            "title": "Enforce correct Lido behavior",
            "description": "The bridge contract doesn’t check if the received outputStETHBalance is the expected amount.",
            "severity": "high",
            "location": "wrapETH function in LidoBridge.sol"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-664"
                ],
                "2": [
                    "CWE-404"
                ],
                "3": [
                    "CWE-772"
                ]
            },
            "title": "Potential locked ETH in bridge contract",
            "description": "The curve protocol could send more ETH after the call, locking ETH in the contract.",
            "severity": "low",
            "location": "unwrapETH method in LidoBridge.sol"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-252"
                ]
            },
            "title": "Verify Lido and Curve return values against ERC20.balanceOf",
            "description": "The Lido.submit and Curve.exchange functions both return the expected output amount.",
            "severity": "low",
            "location": "Lido.submit and Curve.exchange functions"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Test Coverage: Potential untested Code",
            "description": "The tests don’t cover both cases of using Lido or Curve protocol.",
            "severity": "info",
            "location": "wrapETH function in LidoBridge.sol"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Gas Improvements",
            "description": "Using constants and making the contract dependencies as constants can reduce gas costs.",
            "severity": "info",
            "location": "LidoBridge.sol"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Verify Lido Specific Parameters in Constructor",
            "description": "The int128 private curveStETHIndex = 1; could be a constant to save gas.",
            "severity": "info",
            "location": "LidoBridge.sol"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1068"
                ]
            },
            "title": "Add all used Lido methods to interface definition",
            "description": "Add all used methods from the Lido contract to the ILido interface.",
            "severity": "info",
            "location": "ILido interface"
        }
    ]
}