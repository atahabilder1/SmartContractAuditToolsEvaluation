{
    "path": "artifacts/Memeflate Full Smart Contract Security Audit.pdf",
    "project_info": {
        "url": "n/a",
        "commit_id": "n/a",
        "address": "0xafe3321309a994831884fc1725f4c3236ac79f76",
        "chain": "bsc",
        "compiler_version": [
            "v0.7.6+commit.7338295f"
        ],
        "project_path": {
            "MEMEFLATE": "contracts/Memeflate Full Smart Contract Security Audit/MEMEFLATE"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Out of gas",
            "description": "The function `includeAccount()` uses a loop to find and remove addresses from the `_excluded` list, which can be aborted with an OUT_OF_GAS exception if the excluded addresses list is too long. Similarly, `_getCurrentSupply` also uses a loop for evaluating total supply.",
            "severity": "low",
            "location": "_includeAccount() and _getCurrentSupply functions"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-1339"
                ]
            },
            "title": "Rounding error",
            "description": "Calculations with division can result in rounding errors due to the lack of floating points in Solidity.",
            "severity": "low",
            "location": "Various functions with division operations"
        }
    ]
}