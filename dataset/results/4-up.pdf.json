{
    "path": "artifacts/4-up.pdf",
    "project_info": {
        "url": "n/a",
        "commit_id": "n/a",
        "address": "0xf84fd783e7c38a3c99030535919fb89350387502",
        "chain": "bsc",
        "compiler_version": [
            "v0.8.19+commit.7dd6d404"
        ],
        "project_path": {
            "UPFRONT": "contracts/4-up/UPFRONT"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-284"
                ]
            },
            "title": "Stops Transactions",
            "description": "The contract stops transactions for all users excluding addresses excluded from fees.",
            "severity": "low",
            "location": "Contract owner's account"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-1339"
                ]
            },
            "title": "Decimal Division Precision",
            "description": "Division of decimal numbers can result in rounding errors due to Solidity implementation.",
            "severity": "low",
            "location": "`contractTokenBalance` and `newBalance` variables"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-755"
                ]
            },
            "title": "Potential Transfer Revert Propagation",
            "description": "Sending funds to a contract may revert from incoming payment, propagating error.",
            "severity": "low",
            "location": "Interaction with `marketingWallet` and `treasuryFundWallet`"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Price Volatility Concern",
            "description": "Swapping tokens for ETH can lead to significant price volatility.",
            "severity": "low",
            "location": "`swapTokensAtAmount` variable"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Immutable Declaration Improvement",
            "description": "Variables initialized only in the constructor should be declared as immutable.",
            "severity": "low",
            "location": "Contract variables"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Conformance to Solidity Naming Conventions",
            "description": "Not following Solidity naming conventions can reduce readability and maintainability.",
            "severity": "low",
            "location": "Contract, function, and variable names"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Dead Code Elimination",
            "description": "Dead code can increase contract size and deployment cost.",
            "severity": "low",
            "location": "Unreachable or never-executed code"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Uninitialized Variables in Local Scope",
            "description": "Using uninitialized local variables can lead to unpredictable behavior.",
            "severity": "low",
            "location": "Local variables"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Usage of Solidity Assembly",
            "description": "Assembly code can be error-prone and difficult to read.",
            "severity": "low",
            "location": "Assembly code usage"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ],
                "3": [
                    "CWE-252"
                ]
            },
            "title": "Succeeded Transfer Check",
            "description": "Transfer methods should check for success according to ERC20 specification.",
            "severity": "low",
            "location": "Transfer methods"
        }
    ]
}