{
    "path": "artifacts/Metaloop Tech Full Smart Contract Security Audit.pdf",
    "project_info": {
        "url": "n/a",
        "commit_id": "n/a",
        "address": "0x90bb4c7824182e6f37c97cad683f46bc68894907",
        "chain": "bsc",
        "compiler_version": [
            "v0.8.7+commit.e28d00a7"
        ],
        "project_path": {
            "Metaloop": "contracts/Metaloop Tech Full Smart Contract Security Audit/Metaloop"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-755"
                ]
            },
            "title": "Out of gas",
            "description": "The `includeInReward()` function uses a loop to find and remove addresses from the `_excluded` list, which can lead to an OUT_OF_GAS exception if the excluded addresses list is too long.",
            "severity": "low",
            "location": "includeInReward() function"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ],
                "2": [
                    "CWE-1339"
                ]
            },
            "title": "Rounding error",
            "description": "Calculations with division can result in rounding errors due to Solidity's lack of floating-point numbers.",
            "severity": "low",
            "location": "Various functions involving division operations"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Fee checking",
            "description": "The `swapAndLiquify()` function distributes marketing balance as part of the liquidity fee, but there is no check to ensure the marketing fee is less than or equal to the liquidity fee.",
            "severity": "low",
            "location": "swapAndLiquify() function"
        }
    ]
}