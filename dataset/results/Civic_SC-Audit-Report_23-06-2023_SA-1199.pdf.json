{
    "path": "artifacts/Civic_SC-Audit-Report_23-06-2023_SA-1199.pdf",
    "project_info": {
        "url": "https://github.com/identity-com/on-chain-identity-gateway/tree/develop/ethereum/smart-contract/",
        "commit_id": "55547cc6",
        "address": "n/a",
        "chain": "n/a",
        "compiler_version": [
            "n/a"
        ],
        "project_path": {
            "on-chain-identity-gateway": "contracts/Civic_SC-Audit-Report_23-06-2023_SA-1199/on-chain-identity-gateway"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "H01. Inconsistent Data",
            "description": "The function execute() from FlexibleNonceForwarder accepts Ether and does not verify if the transaction value (msg.value) is the same as the request value (req.value) and does not return unused Ether to the caller.",
            "severity": "high",
            "location": "./contracts/FlexibleNonceForwarder.sol : execute()"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-285"
                ],
                "3": [
                    "CWE-863"
                ]
            },
            "title": "M01. Only EOA Allowed",
            "description": "The function withdraw() restricts any incoming smart contract calls by performing high level payable(address).transfer().",
            "severity": "medium",
            "location": "./contracts/GatewayToken.sol : withdraw()"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "M02. Best Practice Violation",
            "description": "Forwarder contract is a direct implementation of OpenZeppelin’s MinimalForwarder contract, with no added functionalities.",
            "severity": "medium",
            "location": "./contracts/Forwarder.sol"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "L01. Redundant Override Keyword",
            "description": "override keyword is used on state variables when not needed.",
            "severity": "low",
            "location": "./contracts/FlagsStorage.sol : superAdmin, supportedFlagsMask, flagIndexes"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "L02. Functions that Can Be Declared External",
            "description": "public functions that are never called by the contract should be declared “external” to save Gas.",
            "severity": "low",
            "location": "Multiple files and functions"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "L03. Reading Array Length in a Loop",
            "description": "Array length should be saved in a local variable instead of being computed in each loop cycle during the condition check.",
            "severity": "low",
            "location": "./contracts/FlagsStorage.sol : addFlags(), removeFlags() and ./contracts/GatewayToken.sol : _getTokenIdsByOwnerAndNetwork()"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "L04. Variable Can Be Set Immutable",
            "description": "Variable _blockAgeTolerance can be declared immutable to save Gas on computations.",
            "severity": "low",
            "location": "./contracts/FlexibleNonceForwarder.sol"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "L05. Floating Pragma",
            "description": "Locking the pragma helps ensure that contracts do not accidentally get deployed using, for example, an outdated compiler version that might introduce bugs.",
            "severity": "low",
            "location": "All contracts"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "L06. Zero Address Check",
            "description": "Address parameters are being used without checking against the possibility of 0x0.",
            "severity": "low",
            "location": "./contracts/GatewayToken.sol : initialize()"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "L07. Best Practice Violation (_disableInitializers())",
            "description": "Since OpenZeppelin’s contracts v4.6.0 it is recommended to use _disableInitializers() in the constructor instead of the initializer modifier.",
            "severity": "low",
            "location": "Multiple files and constructors"
        },
        {
            "id": 10,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "L08. Unused Variable",
            "description": "Unused variables should be removed from the contracts.",
            "severity": "low",
            "location": "./contracts/GatewayToken.sol"
        },
        {
            "id": 11,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1068"
                ]
            },
            "title": "L09. Function Can Be Pure",
            "description": "The function transfersRestricted() does not read or modify the variables of the state and, due to that, should be declared pure.",
            "severity": "low",
            "location": "./contracts/GatewayToken.sol : transfersRestricted()"
        },
        {
            "id": 12,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-755"
                ],
                "3": [
                    "CWE-390"
                ]
            },
            "title": "L10. Redundant Function",
            "description": "withdraw() function is currently needed because of the ERC3525 payable approve() function, which can lead to funds lock if users send funds by mistake to the contract.",
            "severity": "low",
            "location": "./contracts/GatewayToken.sol : withdraw()"
        },
        {
            "id": 13,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "L11. Empty Constructor",
            "description": "In the contract Forwarder the constructor is empty, which makes it redundant due to default Solidity behavior to create an empty constructor if it is not included in code.",
            "severity": "low",
            "location": "./contracts/Forwarder.sol"
        },
        {
            "id": 14,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1059"
                ],
                "3": [
                    "CWE-1110"
                ]
            },
            "title": "L12. Unfinalized NatSpec",
            "description": "In the contract Forwarder the NatSpec placed before the contract definition is not finalized.",
            "severity": "low",
            "location": "./contracts/Forwarder.sol"
        },
        {
            "id": 15,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "L13. Style Guide Violation",
            "description": "The function ordering is not following the official guidelines.",
            "severity": "low",
            "location": "./contracts/GatewayToken.sol"
        },
        {
            "id": 16,
            "category": {
                "1": [
                    "CWE-284"
                ],
                "2": [
                    "CWE-269"
                ]
            },
            "title": "Centralization Risk",
            "description": "The Super Admin role has permissions for performing any change in the state of the protocol, making it very centralized and potentially impacting security.",
            "severity": "n/a",
            "location": "FlagsStorage contract (Super Admin role)"
        },
        {
            "id": 17,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Unspecified Variable Size",
            "description": "Some uint variables do not have their size explicitly specified, which can lead to readability issues.",
            "severity": "n/a",
            "location": "Multiple contracts (IGatewayToken.sol, BitMask.sol, CommonErrors.sol, GatewayToken.sol, MultiERC2771Context.sol)"
        }
    ]
}