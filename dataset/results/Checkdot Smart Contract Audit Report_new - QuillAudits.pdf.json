{
    "path": "artifacts/Checkdot Smart Contract Audit Report_new - QuillAudits.pdf",
    "project_info": {
        "url": "https://github.com/checkdot/CheckDotPrivateSaleContract",
        "commit_id": "161762cebfd42da0730d580c6a46ec5182e26b5e",
        "address": "n/a",
        "chain": "n/a",
        "compiler_version": [
            "n/a"
        ],
        "project_path": {
            "CheckDotPrivateSaleContract": "contracts/Checkdot Smart Contract Audit Report_new - QuillAudits/CheckDotPrivateSaleContract"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Missing Check for max that users can send",
            "description": "Missing check in the receive() function.",
            "severity": "high",
            "location": "Contract - CheckDotPrivateSale, Function - receive()"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-435"
                ]
            },
            "title": "Race condition if pause is not done before claim",
            "description": "Race condition mismatch value and race condition.",
            "severity": "high",
            "location": "Contract - CheckDotPrivateSale, Functions - setPaused(), setClaim()"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-430"
                ]
            },
            "title": "Use of payable in non eth receiving functions",
            "description": "Payable is used only when we receive eth in the function.",
            "severity": "medium",
            "location": "Multiple functions"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Floating Pragma Solidity and Latest Version",
            "description": "Floating pragma solidity and latest version.",
            "severity": "medium",
            "location": "Contract - CheckDotPrivateSale, Line 03"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Code reusability",
            "description": "IERC20 cdtToken is defined multiple times internally in the function.",
            "severity": "low",
            "location": "Multiple functions"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-754"
                ]
            },
            "title": "Specify value of CDT tokens should be withdrawn",
            "description": "In case if some extra CDT is required to be withdraw after the sale.",
            "severity": "low",
            "location": "Function - withdrawRemainingCDT()"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-284"
                ]
            },
            "title": "Specified functions visibility",
            "description": "Specify functions visibility to optimise the code.",
            "severity": "info",
            "location": "Multiple public functions in the contract"
        }
    ]
}