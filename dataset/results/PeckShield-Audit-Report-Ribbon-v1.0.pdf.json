{
    "path": "artifacts/PeckShield-Audit-Report-Ribbon-v1.0.pdf",
    "project_info": {
        "url": "https://github.com/ribbon-finance/audit/tree/3254263",
        "commit_id": "3254263",
        "address": "n/a",
        "chain": "n/a",
        "compiler_version": [
            "n/a"
        ],
        "project_path": {
            "audit": "contracts/PeckShield-Audit-Report-Ribbon-v1/audit"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-697"
                ],
                "2": [
                    "CWE-1023"
                ]
            },
            "title": "Asset Consistency Check Between Instrument And Option",
            "description": "Inconsistency in underlying assets between instrument and option may lead to errors.",
            "severity": "info",
            "location": "RibbonCoveredCall contract, setNextOption() function"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Possible Costly Pool Tokens From Improper Initialization",
            "description": "Malicious actors can make pool tokens extremely expensive by manipulating the initial deposit.",
            "severity": "medium",
            "location": "RibbonCoveredCall contract, _deposit() function"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Improved Sanity Checks For System Parameters",
            "description": "Inadequate sanity checks on system-wide parameters may lead to mis-configuration and undesirable consequences.",
            "severity": "low",
            "location": "BaseVault contract, setWithdrawalFee() function"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-362"
                ]
            },
            "title": "Possible Sandwich/MEV Attacks To Collect Most Profits",
            "description": "The swap operation in the `swapExercisedProfitsToUnderlying()` function is vulnerable to front-running attacks, resulting in a smaller gain for this round of yielding.",
            "severity": "high",
            "location": "GammaAdapter contract, `swapExercisedProfitsToUnderlying()` function"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Hardcoded Decimal Assumption in purchaseWithZeroEx()",
            "description": "The `purchaseWithZeroEx()` function makes an implicit assumption about the decimal of the `sellTokenAddress`, which may not always hold.",
            "severity": "low",
            "location": "GammaAdapter contract, `purchaseWithZeroEx()` function"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-841"
                ]
            },
            "title": "Accommodation of approve() Idiosyncrasies",
            "description": "The approve() routine has a requirement to reduce the allowance to 0 first and then call again to set the proper allowance, otherwise, it may fail.",
            "severity": "low",
            "location": "GammaAdapter::createShort(), USDT Token Contract"
        }
    ]
}