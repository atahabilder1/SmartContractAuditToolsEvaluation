{
    "path": "artifacts/3-fomo.pdf",
    "project_info": {
        "url": "n/a",
        "commit_id": "n/a",
        "address": "0x93b2186adbc3f3ea85ea4c6ac0fb5017975a7c07",
        "chain": "bsc",
        "compiler_version": [
            "v0.8.2+commit.661d1103"
        ],
        "project_path": {
            "FOMO": "contracts/3-fomo/FOMO"
        }
    },
    "findings": [
        {
            "id": 0,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Code Repetition",
            "description": "Repetitive code segments in Solidity can lead to issues like gas efficiency, complexity, readability, security, and maintainability of the source code.",
            "severity": "low",
            "location": "Fee collection method"
        },
        {
            "id": 1,
            "category": {
                "1": [
                    "CWE-703"
                ],
                "2": [
                    "CWE-755"
                ]
            },
            "title": "Potential Transfer Revert Propagation",
            "description": "Sending funds to a contract address that may revert from incoming payment can propagate errors to the token's contract and revert the transfer.",
            "severity": "info",
            "location": "MarketingWallet address"
        },
        {
            "id": 2,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Price Volatility Concern",
            "description": "Swapping tokens for ETH with a high `swapThreshold` value can lead to significant price volatility.",
            "severity": "info",
            "location": "Swap functionality"
        },
        {
            "id": 3,
            "category": {
                "1": [
                    "CWE-707"
                ]
            },
            "title": "Immutable Declaration Improvement",
            "description": "Variables initialized only in the constructor and not defined as immutable can be optimized by declaring them as immutable.",
            "severity": "low",
            "location": "n/a"
        },
        {
            "id": 4,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Redundant SafeMath Library",
            "description": "Using SafeMath library with Solidity version greater than or equal to 0.8.0 adds complexity and overhead unnecessarily.",
            "severity": "info",
            "location": "Arithmetic operations"
        },
        {
            "id": 5,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Conformance to Solidity Naming Conventions",
            "description": "Not following Solidity naming conventions can affect readability and maintainability of the code.",
            "severity": "low",
            "location": "n/a"
        },
        {
            "id": 6,
            "category": {
                "1": [
                    "CWE-710"
                ],
                "2": [
                    "CWE-1041"
                ]
            },
            "title": "Dead Code Elimination",
            "description": "Removing dead code can improve clarity, efficiency, and reduce the size of the contract.",
            "severity": "info",
            "location": "n/a"
        },
        {
            "id": 7,
            "category": {
                "1": [
                    "CWE-682"
                ]
            },
            "title": "Divide before Multiply Operation",
            "description": "Performing divisions before multiplications can cause loss of precision.",
            "severity": "low",
            "location": "Arithmetic operations"
        },
        {
            "id": 8,
            "category": {
                "1": [
                    "CWE-691"
                ],
                "2": [
                    "CWE-670"
                ]
            },
            "title": "Multiple Pragma Directives",
            "description": "Including multiple conflicting pragma directives can produce unexpected errors.",
            "severity": "info",
            "location": "Contract compilation"
        },
        {
            "id": 9,
            "category": {
                "1": [
                    "CWE-710"
                ]
            },
            "title": "Stable Compiler Version",
            "description": "Not locking the pragma version can lead to unexpected vulnerabilities and undiscovered bugs.",
            "severity": "info",
            "location": "Compiler configuration"
        }
    ]
}